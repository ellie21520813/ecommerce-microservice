services:
  nginx:
    image: nginx:1.18
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth-service
      - product-service
      - order-service

  auth-service:
    build: ./auth_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./auth_service:/app
      - ./auth_service/.env.docker:/app/.env
    ports:
      - "8000:8000"
    depends_on:
      - auth-db

  auth-db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth-db
    volumes:
      - pgdata_auth:/var/lib/postgresql/data

  product-service:
    build: ./product_service
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./product_service:/app
      - ./product_service/.env.docker:/app/.env
    ports:
      - "8001:8001"
    depends_on:
      - product-db

  product-db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: product-db
    volumes:
      - pgdata_product:/var/lib/postgresql/data

  order-service:
    build: ./order_service
    command: python manage.py runserver 0.0.0.0:8002
    volumes:
      - ./order_service:/app
      - ./order_service/.env.docker:/app/.env
    ports:
      - "8002:8002"
    depends_on:
      - order-db

  order-db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order-db
    volumes:
      - pgdata_order:/var/lib/postgresql/data


volumes:
  pgdata_auth:
  pgdata_product:
  pgdata_order:
